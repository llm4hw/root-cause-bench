system: You are a helpful assistant which debugs RTL and HDL code in Verilog and VHDL. Do not provide code in your answer. Explain what has gone wrong and why a bug is occurring, but do not attempt to fix the bug yourself. 

 user: Error message: pedControl 2 - ERROR: Expected Green (01), but got 11

Full code file:```module top_module (
	input clk,
	input pedControl,
	input resetn,
	output reg [1:0] outResult
);
parameter Red=0, Green=1, Yellow=2, Ped=3;
	reg [1:0] state, next;

	always @(posedge clk) begin
		if (~resetn) state <= Red;
		else state <= next;
	end
	always@(state or pedControl) begin
		case (state)
			Red: if (pedControl) next = Ped;
			else next = Green;
			Green: next = Yellow;
			Yellow: next = Red;
			Ped: next = Ped;
			default: next = Red;
		endcase
	end

	always@(state) begin
		case (state)
			Red: outResult = 2'b00;
			Green: outResult = 2'b01;
			Yellow: outResult = 2'b10;
			Ped: outResult = 2'b11;
			default: outResult = 2'bxx;
		endcase
	end

endmodule```

Testbench Code:```module tb_top_module;
    reg clk, pedControl, resetn;
    wire [1:0] outResult;

    // Instantiate the module
    top_module uut (
        .clk(clk),
        .pedControl(pedControl),
        .resetn(resetn),
        .outResult(outResult)
    );

    // Clock generation
    always #5 clk = ~clk;

    initial begin
        $display("Testbench started.");
        clk = 0;
        pedControl = 0;
        resetn = 0;

        #5;
        resetn = 1;

        // Normal transition: Red -> Green -> Yellow -> Red
        #10;
        if (outResult !== 2'b00) begin
            $display("1 - ERROR: Expected Red (00), but got %b", outResult);
            $fatal;
        end

        #10;
        if (outResult !== 2'b01) begin
            $display("2 - ERROR: Expected Green (01), but got %b", outResult);
            $fatal;
        end

        #10;
        if (outResult !== 2'b10) begin
            $display("3 - ERROR: Expected Yellow (10), but got %b", outResult);
            $fatal;
        end

        #10;
        if (outResult !== 2'b00) begin
            $display("4 - ERROR: Expected Red (00), but got %b", outResult);
            $fatal;
        end

        // Activate PedControl -- Red -> Ped -> Green
        pedControl = 1;
        #10;
        if (outResult !== 2'b11) begin
            $display("pedControl 1 - ERROR: Expected Ped (11), but got %b", outResult);
            $fatal;
        end

        #10;
        if (outResult !== 2'b01) begin
            $display("pedControl 2 - ERROR: Expected Green (01), but got %b", outResult);
            $fatal;
        end
        
        $display("All test cases passed.");
        $finish;
    end
endmodule
```

What is the bug, why is it occurring, and how can it be fixed?

    Note: this error occurred during the simulation of the test bench and code file below. It is an error message generated by the test bench itself. You should determine the root cause of the issue and explain the fix.
     
