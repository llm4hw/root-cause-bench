The error message you are encountering indicates that there is an attempt to connect a non-existent port named 'b' for the instance 'child_inst' of the module 'ChildModule' in your top module 'top18'. Essentially, this issue arises because there is no port named 'b' in the 'ChildModule' definition that could accept a connection.

Here's a breakdown of why this is happening:

1. **ChildModule Definition**: In your code, `ChildModule` is defined with two ports:
   - An input port named `a`.
   - An output port named `c`.

2. **Connection Attempt in top18**: When instantiating `ChildModule` within `top18`, you attempt to connect a signal to a port named `b`:
   ```verilog
   .b(in)
   ```
   However, `ChildModule` does not have a port named `b`. This mismatch between the names of the ports actually defined in the module and the names used in the instance connection results in the synthesis error you are observing.

3. **Root Cause**: The root cause of the issue is that the port connection list for `ChildModule` in the `top18` module includes a nonexistent port 'b'. The `ChildModule` only has ports 'a' and 'c', so any attempt to connect to any other port will lead to an error.

4. **Resolution**: You need to ensure that you are only connecting signals to ports that actually exist in the module definition. Since `ChildModule` does not have a 'b' port, you should review what the intended connections were supposed to be and adjust them accordingly. Specifically, if you intended for the 'in' signal to connect to the input of `ChildModule`, you should connect it to an existing input port 'a' instead, assuming 'clk' needs to be connected elsewhere or adjusted per your design intent. However, since you requested not to provide the fix directly, focus on ensuring all instantiated ports match those defined in `ChildModule`.
