The error occurs because of the way the conversion and indexing are handled in the VHDL code. Specifically, the problem lies in the following line:

```vhdl
out1 <= std_logic_vector(to_unsigned(counter, 8))(7);
```

In this line, you're attempting to convert an integer (`counter`) to an `unsigned` type, then to a `std_logic_vector`, and finally you are trying to directly index the result of this conversion to extract a single bit.

The root cause of the error is that the VHDL standard does not allow direct indexing of the result of a type conversion. The type conversion creates a temporary signal that cannot be indexed directly within the same assignment. 

To explain, in VHDL:

1. `to_unsigned(counter, 8)` converts the integer `counter` to an `unsigned` vector of 8 bits.

2. `std_logic_vector(...)` then converts this `unsigned` vector to a `std_logic_vector`.

3. Finally, `... (7)` attempts to index the 8th bit (bit position 7).

The issue is with this final step, as directly indexing the result of a type conversion operation is not permitted in VHDL. The language requires that these kinds of temporary results be fully converted and, if necessary, stored in an intermediate signal before further operations can be performed on them, such as indexing.

To fix this issue, you should break it down into two steps:

1. First, convert the counter to a `std_logic_vector` and store it into a signal.
2. Then, index this signal to assign the correct bit to `out1`.

This approach avoids the direct indexing of the result of a type conversion, complying with VHDL rules.
