The error occurs due to a **missing semicolon** in the reset branch of the process. Here's the breakdown:

1. **Bug Location**:  
   Line 45: `data_out <= (others => '0')`  
   This assignment under the `rst = '1'` condition lacks a terminating semicolon (`;`).

2. **Why the Error Occurs**:  
   VHDL requires **every statement within a process to end with a semicolon**. The parser expects either:  
   - A semicolon after the assignment, or  
   - The `end if;` keyword to close the `if` block.  
   Instead, it encounters `elsif` immediately after the incomplete assignment, triggering a syntax error.

3. **Effect on Code Flow**:  
   Without the semicolon, the `if` branch is improperly terminated. The parser interprets the `elsif` as part of the same unfinished statement, violating VHDL's syntax rules for conditional blocks.

4. **How to Fix**:  
   Add a semicolon to the reset assignment:  
   `data_out <= (others => '0');`  
   This correctly terminates the assignment, allowing the `elsif` to be parsed as the next conditional branch.

**Key Principle**: VHDL is strict about statement delimiters. Missing semicolons disrupt the expected structure of sequential statements within processes.