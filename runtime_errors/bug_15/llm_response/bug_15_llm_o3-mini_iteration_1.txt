The error comes from how the inverters are “wired” together. The intent was to create an odd‐numbered ring (a chain in which the output of one inverter feeds the next, with the final inverter’s output connected back to the input of the first) so that the inverter chain oscillates. However, the assign statement that connects the inverter inputs to the inverter outputs is written so that the bit‐ordering is preserved. This means that each inverter’s input is actually being driven by its own corresponding inverter’s output rather than taking its input from the previous stage in the chain. As a result, there is no genuine feedback shift between different stages of the ring. Since none of the inverter outputs “see” a changing value from a different stage (they are locked to themselves), the oscillator never gets going, and OUT never toggles.

In other words, the concatenation of the output bits is done in an order that does not implement the intended one‐bit rotation. The ring oscillator “feedback wiring” is incorrect because the first element is not fed by the last element’s output. That is why the testbench issue message is generated.

To fix the issue, one needs to rewire the feedback so that the output of the last inverter feeds the input of the first inverter and each inverter’s input comes from the previous stage. This reordering will allow the contradictory logic inversion delays to build up and drive the oscillation.