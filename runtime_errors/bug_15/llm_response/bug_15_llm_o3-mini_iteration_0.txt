The problem isn’t with the inverter delays or the counter logic but with how the feedback loop is wired. In the design you intended to “rotate” the inverter outputs so that each inverter’s output drives the next inverter’s input – with the last inverter’s output feeding back into the first inverter’s input. Instead, the concatenation of the inverter outputs to form the inverter inputs is ordered in such a way that each inverter is actually receiving its own output rather than that of a different stage.

More specifically, the continuous assignment builds a vector from the inverter outputs so that the bit positions match one‐to‐one (the MSB is connected to the MSB, the next bit to the next bit, etc.). Because of this, inverter “0” ends up with its input coming from its own output, and similarly for all other inverters. This “self‐feedback” prevents the intended oscillatory behavior from ever starting; none of the stages is “seeing” the toggling from a previous stage, so the overall output never toggles.

Since the oscillator’s output is used as a clock (puf_clk) for further logic, the lack of toggling means that the counter and LED never change state. The test bench monitors the output and, after many cycles of no change, produces the error message.

In summary, the bug is caused by an incorrect ordering of the feedback wiring: instead of chaining the inverter stages in series (with the output of one feeding the input of the next), each inverter is inadvertently connected to itself. Correcting the ordering (so that the last inverter’s output connects to the first inverter’s input and all others are connected sequentially) would enable the ring oscillator to oscillate as intended.