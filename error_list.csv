Bug ID,Type of Bug,File Name,Language,Description,Error Message,Question
1,Combinational Logic,top1.v,Verilog,Incorrect OR and AND logic combination,ERROR: Test Case 1 failed. p1y = 0 (Expected: 1),"Above is a Verilog code about combinational logic and bitwise operation, the output is p1y and p2y. For p1y, the output should be 1 when all (p1a, p1b, p1c) are 1 or all (p1d, p1e, p1f) are 1, otherwise 0. However, the current output for p1y based on the provided code is not always correct. Incorrect OR and AND logic combination"
2,Combinational Logic,top2.v,Verilog,AND operation with constant 0 - always results in 0,ERROR: Test Case 4 failed. q = 0 (Expected: 1),"Above is a verilog code about combinational logic and bitwise operation, which simulate a light with dual controller. In ideal case, the light should be on when both controller are on, otherwise it should be off. However, the current situation is that the light is always off no matter what the inputs are"
3,Carry Logic Error,top3.v,Verilog,Incorrect carry logic in full adder implementation,"ERROR: Test Case 3 failed. o_sum = 0, o_carry = 0 (Expected: 0, 1)","Above Verilog code is about using two half adders to create a full adder. It can perform addition of two 1-bit numbers and a carry input to a 1-bit sum and a carry output. However, the current code cannot always generate the correct output."
4,State Machine Conflict,top4.v,Verilog,Duplicate case statement causing unexpected output, ERROR: Test Case 1 failed. f = 0 (Expected: 1),"above is the Verilog code for case statements, and we assign different inputs to 'x' to check the output 'f', the input should cover from 1 to 16 (which is 1 to f in hex), and the output should be either 0 or 1 based on the input. However, the output of 1 is not as expected."
5,Sequential Logic Error,top5.v,Verilog,Incorrect sequential check for first smaller value,ERROR: Test Case 3 failed. min = 7 (Expected: 8),"above is the Verilog code for conditional check, however, it cannot satisfy the requirement: assign the 1st value smaller than `a` to `min` in the order of b-c-d, else `min = a`."
6,FSM State Transition Error,top6.v,Verilog,Incorrect duration logic for Ped light with longTimeHold,ERROR: Test Case 6 failed. outResult = 101 (Expected > 110),"Above is the verilog code for a mealy machine which describe a traffic light, it contains 4 states: Red, Green, Yellow, Ped. The output of the FSM is a 3-bit signal, which represents the lasting time of the certain light. To be specific, the time which output signal represents has no relationship between the clock cycle, it is just a counter. There is a longTimeHold signal, which will increase the lasting time of the Ped and Green light when it's high. However, the current situation is the output duration of the Ped light will be decreaed when the longTimeHold signal is high."
7,FSM State Transition Error,top7.v,Verilog,Incorrect state transition from Ped to Red instead of Green,"ERROR: Expected Red (00), but got 11","Above is the verilog code for a state machine, which describe a traffic light, it contains 4 states: Red, Green, Yellow, Ped. The state will be changed each clock cycle from one to another. Here's the state transition order: Red -> Ped -> Green -> Yellow -> Red and repeat. However, it cannot work as expected, only shows out the Red and Ped light."
8,FSM State Transition Error,top8.v,Verilog,Incorrect transition from Ped to Green when pedControl is held,"pedControl 2 - ERROR: Expected Green (01), but got 11","Above is the verilog code for a state machine, which describe a traffic light, it contains 4 states: Red, Green, Yellow, Ped. The state will be changed each clock cycle from one to another. When the light is shown as Red and the PedControl signal is high, the next state should be Ped. After Ped light, the light should be green, then yellow, then red, and repeat. If the PedControl signal is low, the light should be changed as normal, which is Red -> Green -> Yellow -> Red and repeat. However, the current situation is that if the light goes to the Ped state, it will be stuck in the Ped state forever."
9,FSM State Transition Error,top9.v,Verilog,Incorrect Morse code generation for letter 'O',ERROR: Morse for O not correct.,"Above Verilog code is about generating Morse code for the letters 'A', 'O', and 'S'. However, it cannot generate the morse code for O correctly."
10,Shift Register Logic Error,top10.v, Verilog,Incorrect shifting logic in 4-bit shift register, "ERROR: Expected 0001 got 1111","Above is the verilog code for a 4 bit shift register, which shift the input serial_in from right to left on each clock cycle. However, the current implementation cannot perform the correct result as each time the input comes in, it will fill all four bits with the same value."
11,Input Validation Error,top11.v,Verilog,"FSM does not correctly handle invalid numeric input outside 0-9 range, resulting in valid=1",ERROR: Invalid input should not be valid.,"Above is the verilog code which can handle the input of 0-9 and output the 0-9 digit or ASCII value of it. However, the code cannot generate correct output when the input is not in the range of 0-9, it always show 57/9."
12,Bit Width Mismatch,top12.v,Verilog,"Comparator uses 5-bit constant to compare with 4-bit input, resulting in always-false condition",ERROR: Expected result = 1 when a = b,"Above is the verilog code which is a comparator, however, whatever the input a is, the output is always 0."
13,Wiring Error,top13.v,Verilog,Incorrect carry chain wiring and final carry output in 4-bit full adder,"ERROR: a= 3, b= 5, cin=0 -> Expected 01000, got 10010","Above is the verilog code for a 4 bit full adder which is constructed based on half adders. However, the current code cannot perform the correct result in the final carry bit."
14,Sensitivity List Error,top14.v,Verilog,"FSM uses posedge reset instead of posedge clk, preventing state transitions","Test 1 failed: Expected state=3, output_data=3, valid=1, got 0 0 0","Above is the verilog code which can handle the input of 0-9 and output the 0-9 digit or ASCII value of it. However, the FSM can only be reseted except for other operations."
15,Structural Error,top15.v,Verilog,Ring oscillator failed to toggle due to lack of startup trigger or improper feedback loop.,ERROR: Ring oscillator output (OUT) never toggled. Likely feedback wiring issue.,"In a correct ring oscillator design, OUT should continuously toggle. However, during simulation, OUT remained static, indicating a failure to oscillate"
